@model SoftwareEngineeringProject.Models.Order

@{
    ViewData["Title"] = "Checkout";
}

<div class="w3-row w3-border-dark-grey w3-red">
    <div class="w3-center w3-padding-large w3-container w3-border-dark-gray">
        <h1 class="w3-center w3-jumbo" style="margin-bottom:64px">CHECKOUT</h1>
        <div class="w3-white">
            
            <!--Below is the for loop which allows the program to display all contents of the cart to the page-->
            @{
                foreach (var item in Cart.Contents)
                {
                    <div class="flex-container">
                        <div class="menu-item--name" style="width:650px;text-align:left;">
                            <h1>
                                @item.food_name
                            </h1>
                        </div>
                        <div class="menu-item--price" style="width:100px;text-align:right;">
                            <h1>
                                <span class="w3-tag w3-dark-grey w3-round w3-padding-small">
                                    @item.price
                                </span>
                            </h1>
                        </div>
                    </div>
                }
            }
            <div>
                <div class="w3-center">

                    <!--Since the order has not been placed yet, we cannot use precalculated calues for SubTotal, AddedTax, and Total, therefore we must do some calculations here.-->
                    @{
                        decimal SubTotal = 0.0M;
                        foreach (var item in Cart.Contents)
                        {
                            SubTotal = SubTotal + Convert.ToDecimal(item.price);
                        }

                        <!--Below we use the Math library to round each value to two decimal places.
                        This is due to occasional errors we had where the program would use more than two decimals when displaying the total price-->
                        decimal NewSubTotal = Math.Round(SubTotal, 2);
                        decimal Tax = Math.Round(SubTotal * 0.0696M, 2);
                        decimal Total = Math.Round(NewSubTotal + Tax, 2);
                    }
                    <h1>
                        <span class="w3-center w3-right w3-dark-grey w3-round w3-padding-small">
                            Subtotal: @Math.Round(SubTotal, 2)
                            <br />
                            Tax: @Math.Round(Tax, 2)
                            <br />
                            Total: @Math.Round(Total, 2)
                        </span>
                    </h1>
                </div>
            </div>
        </div>
        <br />
    </div>

    <!--Below is a form used for obtaining the final information needed to complete an order. It is modified from Visual Studio's auto generated "Create" view template.-->
    <div class="w3-left w3-padding-small">
        <form asp-action="PaymentProcessing">
            <div asp-validation-summary="ModelOnly"></div>
            <div>
                <label asp-for="Name" class="checkoutfont"></label>
                <br />
                <input asp-for="Name" class="checkoutfont" minlength="1" maxlength="40" required /> <!--For each input we made sure to include some basic requirements to ensure compatibility-->
                <span asp-validation-for="Name" class="checkoutfont"></span>
            </div>
            <div>
                <label asp-for="Address" class="checkoutfont"></label>
                <br />
                <input asp-for="Address" class="checkoutfont" minlength="1" maxlength="40" required />
                <span asp-validation-for="Address" class="checkoutfont"></span>
            </div>
            <div>
                <label asp-for="CardNumber" class="checkoutfont"></label>
                <br />
                <input asp-for="CardNumber" class="checkoutfont" minlength="16" maxlength="16" required />
                <span asp-validation-for="CardNumber" class="checkoutfont"></span>
            </div>
            <div>
                <label asp-for="ExpirationDate" class="checkoutfont"></label>
                <br />
                <input asp-for="ExpirationDate" class="checkoutfont" minlength="1" maxlength="6" required />
                <span asp-validation-for="ExpirationDate" class="checkoutfont"></span>
            </div>
            <div>
                <label asp-for="SecurityCode" class="checkoutfont"></label>
                <br />
                <input asp-for="SecurityCode" class="checkoutfont" minlength="1" maxlength="4" required />
                <span asp-validation-for="SecurityCode" class="checkoutfont"></span>
            </div>
            <div asp-validation-summary="ModelOnly" class="checkoutfont"></div>
            <div class="form-group checkoutfont">
                <br />
                <input type="submit" value="Checkout" class="checkoutfont" />
            </div>
        </form>
    </div>
</div>

<!--Below is a validation script that Visual Studio auto generated-->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}